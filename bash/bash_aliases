# NETWORK MONITORING (backup only; see ~admin)
alias nwmon='sudo tcpdump -i en0'
alias nwout='sudo tcpdump -Q "if=en0 and dir=out"'
alias nwin='sudo tcpdump -Q "if=en0 and dir=in"'
port2pid() {
    sudo lsof -Fp -i:$1 | xargs -I% ps -%
}

# FUNCTIONS
clean-resource-forks () {
    local what=${1:-.}
    find $what -exec xattr -d -s -v com.apple.ResourceFork {} \; 2> /dev/null
}

close () {
    osascript -e "tell app \"$1\" to quit"
}

brewrelink () {
    for f in /usr/local/Cellar/*; do
        latest=`ls -1 $f | grep -v current | tail -1`
        ln -nfs $latest $f/current
    done
}

# Dash App: http://kapeli.com/dash
dash () {
    open dash://$1
}

exist () {
    command -v "$1" &> /dev/null
}

find-resource-forks () {
    local what=${1:-.}
    find $what -exec ls -l {}/..namedfork/rsrc \; 2> /dev/null
}

fix-zip () {
    zip -d "$1" __MACOSX/* *.DS_Store*
    unzip -t "$1"
}

git-anonymise-repo () {
    git config --local user.name Anonymous
    git config --local user.email anonymous@example.com
}

git-commit-dates () {
    local value="$*"
    local default=$(date +'%b %d %H:%M')
    if [[ -z "$value" ]]; then
        read -p "Enter the time: [$default] " value
    fi
    local value="${value:-$default}"

    export GIT_COMMITTER_DATE="Day $value:$(date +%S) $(date +%Y)"  # envar => CommitDate
    git commit --amend --no-edit --date="$GIT_COMMITTER_DATE"       # param => AuthorDate
    git show --format=fuller
}

isadmin () {
    dscl . read /groups/admin GroupMembership | grep $1 &> /dev/null
}

# Bash Function to open man pages in new terminal window - Mac OS X Hints
# http://hints.macworld.com/article.php?story=20131226153018801
man() {
    if [ $# -eq 1 ]; then open x-man-page://$1 ; elif [ $# -eq 2 ] ; then open x-man-page://$1/$2 ; fi
}

open-site () {
    current_dir="${PWD##*/}"

    # Does ~/Sites link here?
    links_sites="$(ls -l ~/Sites | grep "$current_dir" | tr -s ' ' | cut -d ' ' -f 9)"
    links_array=( $links_sites )
    links_count=${#links_array[@]}
    if [[ $links_count == 1 ]]; then
        open "http://${links_array[0]}.dev"
        return
    fi

    # Is there a web location file to open?
    shortcut_file=$(ls -1 *.{webloc,url} 2>/dev/null | head -1)
    if [[ -a "$shortcut_file" ]]; then
        open "$shortcut_file";
        return
    fi

    # Oops, something's wrong...
    if [[ $links_count > 1 ]]; then
        echo "Current directory '$current_dir' is used in too many ~/Sites"
    else
        echo "Didn't find any ~/Sites pointing to the current directory '$current_dir' nor any web location files inside it"
    fi
}

source_from_brew () {
    source_from_path `brew --prefix`/$1
}

source_from_path () {
    local path="$1"
    [[ -r "$1" ]] && source "$1"
}

sudoadd () {
    local user="$1"
    sudoaupdate -a $user
}

sudorm () {
    local user="$1"
    sudoaupdate -d $user
}

sudoaupdate () {
    local flag="$1"
    local user="$2"
    sudo dseditgroup -o edit $flag $user -t user admin
    sudo dseditgroup -o edit $flag $user -t user wheel
}

super () {
    su - admin -c "sudo $*"
}

watchme () {
    while true; do
        [[ ! ${WATCH_SKIP_CLEAR:-} ]] && clear || echo
        echo "# WATCH_SECONDS=${WATCH_SECONDS:=5}   WATCH_SKIP_CLEAR=${WATCH_SKIP_CLEAR:-}"
        echo "# $(date)"
        echo "> $*"; echo
        ( $* )
        sleep $WATCH_SECONDS
    done
}

week-days-en() {
    date +"Week %V"
    date -v+sunday    +"%Y-%m-%d %a"
    date -v+saturday  +"%Y-%m-%d %a"
    date -v+friday    +"%Y-%m-%d %a"
    date -v+thursday  +"%Y-%m-%d %a"
    date -v+wednesday +"%Y-%m-%d %a"
    date -v+tuesday   +"%Y-%m-%d %a"
    date -v+monday    +"%Y-%m-%d %a"
}

week-days-pt() {
    date +"Semana %V"
    date -v+sunday    +"%Y-%m-%d Dom"
    date -v+saturday  +"%Y-%m-%d SÃ¡b"
    date -v+friday    +"%Y-%m-%d Sex"
    date -v+thursday  +"%Y-%m-%d Qui"
    date -v+wednesday +"%Y-%m-%d Qua"
    date -v+tuesday   +"%Y-%m-%d Ter"
    date -v+monday    +"%Y-%m-%d Seg"
}

# DEFAULTS
alias grep='grep --color'
alias ll='ls -lhp'
alias lld='ls -lh -d */'
alias llf='ll | grep -v "^d"'
alias lsd='ls -d */'
alias lsf='ls -p | grep -v "/"'
alias psql='psql -U postgres'
exist rmtrash && alias rm=rmtrash || alias rm='rm -i'
alias top='top -o cpu'

# TOOLS
alias chrome='open -na "Google Chrome" --args --new-window'  # https://apple.stackexchange.com/a/305902
alias clean-tmp-all='clean-tmp-bak; clean-tmp-ds; clean-tmp-meta'
alias clean-tmp-bak='find . \( -name ".#*" -or -name "*~" \) -exec rm {} \;'
alias clean-tmp-ds='find . \( -name .DS_Store -or -name ._.DS_Store \) -exec rm {} \;'
alias clean-tmp-meta='find . -name "._*" -exec rm {} \;'
alias clean-mov-thumbs='find . -name "*.MOV" | sed -e "s/\.MOV/.JPG/" | xargs -I{} rm "{}"'
alias convert-xls-csv='/Applications/LibreOffice.app/Contents/MacOS/soffice --invisible --convert-to csv'
alias edit-hosts='mate /etc/hosts'
alias edit-vhosts='mate /etc/apache2/extra/httpd-vhosts.conf'
alias find-tmp='find . -name .DS_Store -or -name ._.DS_Store -or -name ".#*" -or -name "*~" -or -name "._*"'
alias flush-dns='su admin -c "sudo dscacheutil -flushcache"'
alias hide-desktop-icons='defaults write com.apple.finder CreateDesktop -bool false; killall Finder'
alias login-window='/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend'
alias logout-user="osascript -e 'tell application \"System Events\" to log out'"
alias open-idea="open . && gitx && chrome && idea ."
alias open-mate="open . && gitx && chrome && mate ."
alias restart-apache='su admin -c "sudo apachectl -k restart"'
alias restart-pow='touch ~/.pow/restart.txt'
alias rot13='tr "0-9a-zA-Z" "5-90-4n-za-mN-ZA-M"'
alias show-desktop-icons='defaults delete com.apple.finder CreateDesktop; killall Finder'

# http://www.leancrew.com/all-this/2013/02/getting-rid-of-open-with-duplicates/
alias fix-open-with='/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user'

# VERSION CONTROL
alias cvsst='cvs st | grep -E "\?|Status:" | grep -v "Up-to-date"; date'
alias cvsup='cvs -q update -P -d ; date'
alias cvsupC='cvs update -P -d -C ; date'
alias svnadd='svn st | grep \? | cut -c2- | xargs svn add'
alias g='git'

# PROXY/SOCKS
alias tunnel-create="ssh -D 1080 -f -N digitalocean"    # SOCKS port
alias tunnel-list="ps -el | grep 'ssh -D'"
# http://www.chromium.org/developers/design-documents/network-stack/socks-proxy
alias tunnel-chrome='open /Applications/Google\ Chrome.app --args --incognito --proxy-server="socks5://localhost:1080" --host-resolver-rules="MAP * ~NOTFOUND , EXCLUDE localhost"'
